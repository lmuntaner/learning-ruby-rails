  [1m[36m (4.1ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (2.2ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTable (20141023171635)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (4.3ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "user_name" character varying(255) NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (2.8ms)[0m  CREATE TABLE "polls" ("id" serial primary key, "title" character varying(255) NOT NULL, "author_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (4.1ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "question_text" text NOT NULL, "poll_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (4.0ms)[0m  CREATE TABLE "answer_choices" ("id" serial primary key, "answer_text" text NOT NULL, "question_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (5.2ms)[0m  [1mCREATE TABLE "reponses" ("id" serial primary key, "user_id" integer NOT NULL, "answer_choice_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (1.5ms)[0m  CREATE  INDEX  "index_polls_on_author_id" ON "polls"  ("author_id")
  [1m[36m (1.1ms)[0m  [1mCREATE  INDEX  "index_questions_on_poll_id" ON "questions"  ("poll_id")[0m
  [1m[35m (1.1ms)[0m  CREATE  INDEX  "index_answer_choices_on_question_id" ON "answer_choices"  ("question_id")
  [1m[36m (3.2ms)[0m  [1mCREATE  INDEX  "index_responses_on_user_id" ON "responses"  ("user_id")[0m
PG::UndefinedTable: ERROR:  relation "responses" does not exist
: CREATE  INDEX  "index_responses_on_user_id" ON "responses"  ("user_id")
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTable (20141023171635)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "user_name" character varying(255) NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (3.2ms)[0m  CREATE TABLE "polls" ("id" serial primary key, "title" character varying(255) NOT NULL, "author_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (3.9ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "question_text" text NOT NULL, "poll_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (4.1ms)[0m  CREATE TABLE "answer_choices" ("id" serial primary key, "answer_text" text NOT NULL, "question_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (2.7ms)[0m  [1mCREATE TABLE "responses" ("id" serial primary key, "user_id" integer NOT NULL, "answer_choice_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (1.3ms)[0m  CREATE  INDEX  "index_polls_on_author_id" ON "polls"  ("author_id")
  [1m[36m (1.1ms)[0m  [1mCREATE  INDEX  "index_questions_on_poll_id" ON "questions"  ("poll_id")[0m
  [1m[35m (1.1ms)[0m  CREATE  INDEX  "index_answer_choices_on_question_id" ON "answer_choices"  ("question_id")
  [1m[36m (1.1ms)[0m  [1mCREATE  INDEX  "index_responses_on_user_id" ON "responses"  ("user_id")[0m
  [1m[35m (1.2ms)[0m  CREATE  INDEX  "index_responses_on_answer_choice_id" ON "responses"  ("answer_choice_id")
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX  "index_responses_on_user_id_and_answer_choice_id" ON "responses"  ("user_id", "answer_choice_id")[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141023171635"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (125.3ms)[0m  [1mDROP DATABASE IF EXISTS "db/polls_development"[0m
  [1m[35m (306.5ms)[0m  CREATE DATABASE "db/polls_development" ENCODING = 'utf8'
  [1m[36mSQL (0.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (48.0ms)[0m  CREATE TABLE "answer_choices" ("id" serial primary key, "answer_text" text NOT NULL, "question_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (2.2ms)[0m  [1mCREATE  INDEX  "index_answer_choices_on_question_id" ON "answer_choices" USING btree ("question_id")[0m
  [1m[35m (3.9ms)[0m  CREATE TABLE "polls" ("id" serial primary key, "title" character varying(255) NOT NULL, "author_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.7ms)[0m  [1mCREATE  INDEX  "index_polls_on_author_id" ON "polls" USING btree ("author_id")[0m
  [1m[35m (5.3ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "question_text" text NOT NULL, "poll_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (2.8ms)[0m  [1mCREATE  INDEX  "index_questions_on_poll_id" ON "questions" USING btree ("poll_id")[0m
  [1m[35m (3.3ms)[0m  CREATE TABLE "responses" ("id" serial primary key, "user_id" integer NOT NULL, "answer_choice_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.8ms)[0m  [1mCREATE  INDEX  "index_responses_on_answer_choice_id" ON "responses" USING btree ("answer_choice_id")[0m
  [1m[35m (1.6ms)[0m  CREATE UNIQUE INDEX  "index_responses_on_user_id_and_answer_choice_id" ON "responses" USING btree ("user_id", "answer_choice_id")
  [1m[36m (1.4ms)[0m  [1mCREATE  INDEX  "index_responses_on_user_id" ON "responses" USING btree ("user_id")[0m
  [1m[35m (3.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "user_name" character varying(255) NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (1.8ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.5ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20141023171635')
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"[0m  [["created_at", "2014-10-23 18:04:55.212031"], ["updated_at", "2014-10-23 18:04:55.212031"], ["user_name", "Llorenc"]]
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"  [["created_at", "2014-10-23 18:04:55.219308"], ["updated_at", "2014-10-23 18:04:55.219308"], ["user_name", "Coulter"]]
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "polls" ("author_id", "created_at", "title", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["author_id", 1], ["created_at", "2014-10-23 18:04:55.272204"], ["title", "Barcelona vs. Real Madrid"], ["updated_at", "2014-10-23 18:04:55.272204"]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "polls" ("author_id", "created_at", "title", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["author_id", 2], ["created_at", "2014-10-23 18:04:55.276016"], ["title", "App Academy vs. Dev Bootcamp"], ["updated_at", "2014-10-23 18:04:55.276016"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:04:55.292382"], ["poll_id", 1], ["question_text", "Who will win?"], ["updated_at", "2014-10-23 18:04:55.292382"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:04:55.296583"], ["poll_id", 1], ["question_text", "Who will score first?"], ["updated_at", "2014-10-23 18:04:55.296583"]]
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:04:55.298960"], ["poll_id", 2], ["question_text", "Who will win?"], ["updated_at", "2014-10-23 18:04:55.298960"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:04:55.301388"], ["poll_id", 2], ["question_text", "Who will make more money?"], ["updated_at", "2014-10-23 18:04:55.301388"]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Barcelona"], ["created_at", "2014-10-23 18:04:55.319159"], ["question_id", 1], ["updated_at", "2014-10-23 18:04:55.319159"]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Real Madrid"], ["created_at", "2014-10-23 18:04:55.323843"], ["question_id", 1], ["updated_at", "2014-10-23 18:04:55.323843"]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Messi"], ["created_at", "2014-10-23 18:04:55.327392"], ["question_id", 2], ["updated_at", "2014-10-23 18:04:55.327392"]]
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Ronaldo"], ["created_at", "2014-10-23 18:04:55.329532"], ["question_id", 2], ["updated_at", "2014-10-23 18:04:55.329532"]]
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "App Academy"], ["created_at", "2014-10-23 18:04:55.331679"], ["question_id", 3], ["updated_at", "2014-10-23 18:04:55.331679"]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Dev Bootcamp"], ["created_at", "2014-10-23 18:04:55.334091"], ["question_id", 3], ["updated_at", "2014-10-23 18:04:55.334091"]]
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Llorenc"], ["created_at", "2014-10-23 18:04:55.337560"], ["question_id", 4], ["updated_at", "2014-10-23 18:04:55.337560"]]
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Coulter"], ["created_at", "2014-10-23 18:04:55.339648"], ["question_id", 4], ["updated_at", "2014-10-23 18:04:55.339648"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.8ms)[0m  SELECT "polls".* FROM "polls"
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mAnswerChoice Load (0.7ms)[0m  SELECT "answer_choices".* FROM "answer_choices"
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.5ms)[0m  SELECT "polls".* FROM "polls"  WHERE "polls"."author_id" = $1  [["author_id", 1]]
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 8]]
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 8]]
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 8], ["created_at", "2014-10-23 18:11:24.729999"], ["updated_at", "2014-10-23 18:11:24.729999"], ["user_id", 2]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.5ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_choice_id", 1], ["created_at", "2014-10-23 18:12:03.883525"], ["updated_at", "2014-10-23 18:12:03.883525"], ["user_id", 1]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36mResponse Load (0.7ms)[0m  [1mSELECT  "responses".* FROM "responses"   ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mResponse Load (0.4ms)[0m  [1mSELECT  "responses".* FROM "responses"   ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 8]]
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "response"
LINE 1: ...d" WHERE "answer_choices"."question_id" = $1 AND (response.i...
                                                             ^
: SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (response.id <> 1)
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "response"
LINE 1: ...d" WHERE "answer_choices"."question_id" = $1 AND (response.i...
                                                             ^
: SELECT COUNT(*) FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (response.id <> 1)
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "response"
LINE 1: ...d" WHERE "answer_choices"."question_id" = $1 AND (response.i...
                                                             ^
: SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (response.id <> 1)
  [1m[36mResponse Load (0.4ms)[0m  [1mSELECT  "responses".* FROM "responses"   ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mResponse Load (0.6ms)[0m  [1mSELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id <> 1)[0m  [["question_id", 4]]
  [1m[35m (0.6ms)[0m  SELECT COUNT(*) FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id <> 1)  [["question_id", 4]]
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 1], ["created_at", "2014-10-23 18:15:24.696486"], ["updated_at", "2014-10-23 18:15:24.696486"], ["user_id", 2]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
  [1m[35mResponse Load (0.6ms)[0m  SELECT  "responses".* FROM "responses"   ORDER BY "responses"."id" DESC LIMIT 1
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mResponse Load (0.6ms)[0m  SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id <> 3)  [["question_id", 1]]
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 2], ["created_at", "2014-10-23 18:18:39.320718"], ["updated_at", "2014-10-23 18:18:39.320718"], ["user_id", 2]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
  [1m[35mResponse Load (0.6ms)[0m  SELECT  "responses".* FROM "responses"   ORDER BY "responses"."id" DESC LIMIT 1
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mResponse Load (0.6ms)[0m  SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id <> 4)  [["question_id", 1]]
  [1m[36mResponse Load (0.6ms)[0m  [1mSELECT  "responses".* FROM "responses"   ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.5ms)[0m  SELECT "responses".* FROM "responses"  WHERE "responses"."id" = 2
  [1m[36mResponse Load (0.6ms)[0m  [1mSELECT  "responses".* FROM "responses"  WHERE "responses"."id" = 2 LIMIT 1[0m
  [1m[35mQuestion Load (0.5ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mResponse Load (1.1ms)[0m  [1mSELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id <> 2 OR responses.id IS NULL)[0m  [["question_id", 1]]
  [1m[36mResponse Load (0.8ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.8ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
PG::UndefinedColumn: ERROR:  column responses.response_id does not exist
LINE 1: ...stion_id" = $1 AND (responses.id IS NOT NULL) AND "responses...
                                                             ^
: SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."response_id" IS NULL LIMIT 1
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mResponse Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" IS NULL LIMIT 1[0m  [["question_id", 1]]
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 1], ["created_at", "2014-10-23 18:47:38.795124"], ["updated_at", "2014-10-23 18:47:38.795124"], ["user_id", 1]]
PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "index_responses_on_user_id_and_answer_choice_id"
DETAIL:  Key (user_id, answer_choice_id)=(1, 1) already exists.
: INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.5ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mResponse Load (0.6ms)[0m  SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL)  [["question_id", 1]]
  [1m[36mResponse Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" IS NULL LIMIT 1[0m  [["question_id", 1]]
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 1], ["created_at", "2014-10-23 18:49:00.172262"], ["updated_at", "2014-10-23 18:49:00.172262"], ["user_id", 1]]
PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "index_responses_on_user_id_and_answer_choice_id"
DETAIL:  Key (user_id, answer_choice_id)=(1, 1) already exists.
: INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mResponse Load (0.7ms)[0m  SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL)  [["question_id", 1]]
  [1m[36mResponse Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" IS NULL LIMIT 1[0m  [["question_id", 1]]
  [1m[35mResponse Exists (0.6ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" IS NULL LIMIT 1  [["question_id", 1]]
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_choice_id", 1], ["created_at", "2014-10-23 18:50:46.571371"], ["updated_at", "2014-10-23 18:50:46.571371"], ["user_id", 1]]
PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "index_responses_on_user_id_and_answer_choice_id"
DETAIL:  Key (user_id, answer_choice_id)=(1, 1) already exists.
: INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (1.0ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (1.8ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mResponse Load (1.1ms)[0m  [1mSELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL)[0m  [["question_id", 1]]
  [1m[35mResponse Exists (0.6ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" IS NULL LIMIT 1  [["question_id", 1]]
  [1m[36mResponse Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" IS NULL LIMIT 1[0m  [["question_id", 1]]
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 1], ["created_at", "2014-10-23 18:51:28.315766"], ["updated_at", "2014-10-23 18:51:28.315766"], ["user_id", 1]]
PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "index_responses_on_user_id_and_answer_choice_id"
DETAIL:  Key (user_id, answer_choice_id)=(1, 1) already exists.
: INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.5ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mResponse Load (0.6ms)[0m  SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL)  [["question_id", 1]]
  [1m[36mResponse Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1[0m  [["question_id", 1]]
  [1m[35mResponse Exists (0.6ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1  [["question_id", 1]]
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.5ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mResponse Exists (1.0ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1  [["question_id", 1]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (115.3ms)[0m  [1mDROP DATABASE IF EXISTS "db/polls_development"[0m
  [1m[35m (421.2ms)[0m  CREATE DATABASE "db/polls_development" ENCODING = 'utf8'
  [1m[36mSQL (0.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.3ms)[0m  CREATE TABLE "answer_choices" ("id" serial primary key, "answer_text" text NOT NULL, "question_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.6ms)[0m  [1mCREATE  INDEX  "index_answer_choices_on_question_id" ON "answer_choices" USING btree ("question_id")[0m
  [1m[35m (3.7ms)[0m  CREATE TABLE "polls" ("id" serial primary key, "title" character varying(255) NOT NULL, "author_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.6ms)[0m  [1mCREATE  INDEX  "index_polls_on_author_id" ON "polls" USING btree ("author_id")[0m
  [1m[35m (4.6ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "question_text" text NOT NULL, "poll_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.6ms)[0m  [1mCREATE  INDEX  "index_questions_on_poll_id" ON "questions" USING btree ("poll_id")[0m
  [1m[35m (4.0ms)[0m  CREATE TABLE "responses" ("id" serial primary key, "user_id" integer NOT NULL, "answer_choice_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.5ms)[0m  [1mCREATE  INDEX  "index_responses_on_answer_choice_id" ON "responses" USING btree ("answer_choice_id")[0m
  [1m[35m (1.3ms)[0m  CREATE UNIQUE INDEX  "index_responses_on_user_id_and_answer_choice_id" ON "responses" USING btree ("user_id", "answer_choice_id")
  [1m[36m (1.5ms)[0m  [1mCREATE  INDEX  "index_responses_on_user_id" ON "responses" USING btree ("user_id")[0m
  [1m[35m (4.3ms)[0m  CREATE TABLE "users" ("id" serial primary key, "user_name" character varying(255) NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (2.4ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.7ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20141023171635')
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"[0m  [["created_at", "2014-10-23 18:53:59.924465"], ["updated_at", "2014-10-23 18:53:59.924465"], ["user_name", "Llorenc"]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"  [["created_at", "2014-10-23 18:53:59.932347"], ["updated_at", "2014-10-23 18:53:59.932347"], ["user_name", "Coulter"]]
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "polls" ("author_id", "created_at", "title", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["author_id", 1], ["created_at", "2014-10-23 18:53:59.982381"], ["title", "Barcelona vs. Real Madrid"], ["updated_at", "2014-10-23 18:53:59.982381"]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "polls" ("author_id", "created_at", "title", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["author_id", 2], ["created_at", "2014-10-23 18:53:59.986269"], ["title", "App Academy vs. Dev Bootcamp"], ["updated_at", "2014-10-23 18:53:59.986269"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:53:59.999786"], ["poll_id", 1], ["question_text", "Who will win?"], ["updated_at", "2014-10-23 18:53:59.999786"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:54:00.003392"], ["poll_id", 1], ["question_text", "Who will score first?"], ["updated_at", "2014-10-23 18:54:00.003392"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:54:00.006571"], ["poll_id", 2], ["question_text", "Who will win?"], ["updated_at", "2014-10-23 18:54:00.006571"]]
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 18:54:00.008961"], ["poll_id", 2], ["question_text", "Who will make more money?"], ["updated_at", "2014-10-23 18:54:00.008961"]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Barcelona"], ["created_at", "2014-10-23 18:54:00.024214"], ["question_id", 1], ["updated_at", "2014-10-23 18:54:00.024214"]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Real Madrid"], ["created_at", "2014-10-23 18:54:00.028134"], ["question_id", 1], ["updated_at", "2014-10-23 18:54:00.028134"]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Messi"], ["created_at", "2014-10-23 18:54:00.030734"], ["question_id", 2], ["updated_at", "2014-10-23 18:54:00.030734"]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Ronaldo"], ["created_at", "2014-10-23 18:54:00.033033"], ["question_id", 2], ["updated_at", "2014-10-23 18:54:00.033033"]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "App Academy"], ["created_at", "2014-10-23 18:54:00.035499"], ["question_id", 3], ["updated_at", "2014-10-23 18:54:00.035499"]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Dev Bootcamp"], ["created_at", "2014-10-23 18:54:00.037880"], ["question_id", 3], ["updated_at", "2014-10-23 18:54:00.037880"]]
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Llorenc"], ["created_at", "2014-10-23 18:54:00.039954"], ["question_id", 4], ["updated_at", "2014-10-23 18:54:00.039954"]]
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Coulter"], ["created_at", "2014-10-23 18:54:00.042040"], ["question_id", 4], ["updated_at", "2014-10-23 18:54:00.042040"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[36mResponse Load (1.5ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users"
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.9ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mResponse Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1[0m  [["question_id", 1]]
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 1], ["created_at", "2014-10-23 18:57:56.275128"], ["updated_at", "2014-10-23 18:57:56.275128"], ["user_id", 1]]
  [1m[36mPoll Load (0.5ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35m (41.7ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 7]]
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 7]]
  [1m[36mResponse Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 2 LIMIT 1[0m  [["question_id", 4]]
  [1m[35mPoll Load (0.4ms)[0m  SELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.6ms)[0m  SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1  [["question_id", 1]]
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (0.3ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.6ms)[0m  [1mSELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1[0m  [["question_id", 1]]
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" IN (1)
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.6ms)[0m  SELECT "responses".* FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1  [["question_id", 1]]
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" IN (1)[0m
  [1m[35mQuestion Load (0.3ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.4ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.9ms)[0m  SELECT
        ac.answer_text AS answer, COUNT(*) AS count
      FROM
        responses AS r
      JOIN
        answer_choices AS ac
      ON r.answer_choice_id = ac.id
      WHERE
        ac.question_id = 1
      GROUP BY
        ac.id
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.9ms)[0m  SELECT
        ac.answer_text AS answer, COUNT(*) AS num_answers
      FROM
        responses AS r
      JOIN
        answer_choices AS ac
      ON r.answer_choice_id = ac.id
      WHERE
        ac.question_id = 1
      GROUP BY
        ac.id
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ["SELECT\n          ac.answer_text AS answer, COUNT(*) AS num_answers\n        FROM\n          responses AS r\n        JOIN\n          answer_choices AS ac ON r.answer_choice_id = ac.id\n        WHERE\n          ac.question_id = ?\n        GROUP BY\n          ac.id", 1]
TypeError: wrong argument type Array (expected String): ["SELECT\n          ac.answer_text AS answer, COUNT(*) AS num_answers\n        FROM\n          responses AS r\n        JOIN\n          answer_choices AS ac ON r.answer_choice_id = ac.id\n        WHERE\n          ac.question_id = ?\n        GROUP BY\n          ac.id", 1]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m1 (0.6ms)[0m          SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?
        GROUP BY
          ac.id

PG::SyntaxError: ERROR:  syntax error at or near "GROUP"
LINE 9:         GROUP BY
                ^
:         SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?
        GROUP BY
          ac.id

  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m1 (0.5ms)[0m          SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?
        GROUP BY
          ac.id

PG::SyntaxError: ERROR:  syntax error at or near "GROUP"
LINE 9:         GROUP BY
                ^
:         SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?
        GROUP BY
          ac.id

  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m1 (0.5ms)[0m          SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        RIGHT OUTER JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?
        GROUP BY
          ac.id

PG::SyntaxError: ERROR:  syntax error at or near "GROUP"
LINE 9:         GROUP BY
                ^
:         SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        RIGHT OUTER JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?
        GROUP BY
          ac.id

  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m1 (0.4ms)[0m          SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        RIGHT OUTER JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?

PG::SyntaxError: ERROR:  syntax error at end of input
LINE 9: 
        ^
:         SELECT
          ac.answer_text AS answer, COUNT(*) AS num_answers
        FROM
          responses AS r
        RIGHT OUTER JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?

  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m1 (0.4ms)[0m          SELECT
          ac.answer_text AS answer
        FROM
          responses AS r
        RIGHT OUTER JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?

PG::SyntaxError: ERROR:  syntax error at end of input
LINE 9: 
        ^
:         SELECT
          ac.answer_text AS answer
        FROM
          responses AS r
        RIGHT OUTER JOIN
          answer_choices AS ac ON r.answer_choice_id = ac.id
        WHERE
          ac.question_id = ?

  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m        SELECT
        *
      FROM
        responses

  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m        SELECT
        *
      FROM
        responses

  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.6ms)[0m  SELECT answer_choices.answer_text AS answer, COUNT(*) AS num_answers FROM "answer_choices" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id  [["question_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
PG::SyntaxError: ERROR:  syntax error at or near "WHERE"
LINE 1: ...s FROM "answer_choices" LEFT OUTER JOIN responses WHERE "ans...
                                                             ^
: SELECT answer_choices.answer_text AS answer, COUNT(*) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id
  [1m[35mQuestion Load (0.5ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.6ms)[0m  [1mSELECT answer_choices.answer_text AS answer, COUNT(*) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id[0m  [["question_id", 1]]
  [1m[35mQuestion Load (0.3ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "response"
LINE 1: ...CT answer_choices.answer_text AS answer, SUM(CASE response.i...
                                                             ^
: SELECT answer_choices.answer_text AS answer, SUM(CASE response.id WHEN NULL THEN 0 ELSE 1 END) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.6ms)[0m  SELECT answer_choices.answer_text AS answer, SUM(CASE responses.id WHEN NULL THEN 0 ELSE 1 END) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id  [["question_id", 1]]
  [1m[36mResponse Load (0.5ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35mQuestion Load (0.4ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
PG::SyntaxError: ERROR:  syntax error at or near "NULL"
LINE 1: ...wer_text AS answer, SUM(CASE responses.id WHEN IS NULL THEN ...
                                                             ^
: SELECT answer_choices.answer_text AS answer, SUM(CASE responses.id WHEN IS NULL THEN 0 ELSE COUNT(*) END) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
PG::GroupingError: ERROR:  aggregate function calls cannot be nested
LINE 1: ...r, SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE COUNT(*) E...
                                                             ^
: SELECT answer_choices.answer_text AS answer, SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE COUNT(*) END) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id
  [1m[35mQuestion Load (0.4ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
PG::GroupingError: ERROR:  column "responses.id" must appear in the GROUP BY clause or be used in an aggregate function
LINE 1: ...T answer_choices.answer_text AS answer, CASE WHEN responses....
                                                             ^
: SELECT answer_choices.answer_text AS answer, CASE WHEN responses.id IS NULL THEN 0 ELSE COUNT(*) END num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.6ms)[0m  SELECT answer_choices.answer_text AS answer, COUNT(*) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id  [["question_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.6ms)[0m  SELECT answer_choices.answer_text AS answer, SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END) AS num_answers FROM "answer_choices" LEFT OUTER JOIN responses ON answer_choices.id = responses.answer_choice_id WHERE "answer_choices"."question_id" = $1 GROUP BY answer_choices.id  [["question_id", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.5ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.question_id = questions.id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN response.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::SyntaxError: ERROR:  syntax error at or near "answer_choices"
LINE 18:           answer_choices.question_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.question_id = questions.id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN response.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.5ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN response.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::SyntaxError: ERROR:  syntax error at or near "answer_choices"
LINE 18:           answer_choices.question_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN response.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.8ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::SyntaxError: ERROR:  syntax error at or near "answer_choices"
LINE 18:           answer_choices.question_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.8ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.answer_choice_id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::SyntaxError: ERROR:  syntax error at or near "answer_choices"
LINE 18:           answer_choices.question_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id, (CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.answer_choice_id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.8ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id,
          CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.answer_choice_id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::SyntaxError: ERROR:  syntax error at or near "answer_choices"
LINE 19:           answer_choices.question_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          answer_choices.question_id AS question_id,
          CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses
        LEFT OUTER JOIN
          answer_choices ON answer_choices.id = responses.answer_choice_id
        WHERE
          responses.user_id = 1
        GROUP
          answer_choices.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.8ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          CASE WHEN r.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::SyntaxError: ERROR:  syntax error at or near "ac"
LINE 19:           ac.question_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          CASE WHEN r.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.8ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          CASE WHEN r.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::SyntaxError: ERROR:  syntax error at or near "ac"
LINE 19:           ac.question_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          CASE WHEN r.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.0ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          CASE WHEN r.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::GroupingError: ERROR:  column "r.id" must appear in the GROUP BY clause or be used in an aggregate function
LINE 12:           CASE WHEN r.id IS NULL THEN 0 ELSE 1 END num_respo...
                             ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          CASE WHEN r.id IS NULL THEN 0 ELSE 1 END num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.0ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          (CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::GroupingError: ERROR:  column "r.id" must appear in the GROUP BY clause or be used in an aggregate function
LINE 12:           (CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_...
                              ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          (CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.7ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "question"
LINE 22:          ON question.id = user_responses.question_id
                     ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON question.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (2.0ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 3]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 3]]
  [1m[36mResponse Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1[0m  [["question_id", 2]]
  [1m[35mPoll Load (0.5ms)[0m  SELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (137.7ms)[0m  [1mDROP DATABASE IF EXISTS "db/polls_development"[0m
  [1m[35m (319.5ms)[0m  CREATE DATABASE "db/polls_development" ENCODING = 'utf8'
  [1m[36mSQL (0.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.6ms)[0m  CREATE TABLE "answer_choices" ("id" serial primary key, "answer_text" text NOT NULL, "question_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (2.5ms)[0m  [1mCREATE  INDEX  "index_answer_choices_on_question_id" ON "answer_choices" USING btree ("question_id")[0m
  [1m[35m (3.3ms)[0m  CREATE TABLE "polls" ("id" serial primary key, "title" character varying(255) NOT NULL, "author_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.4ms)[0m  [1mCREATE  INDEX  "index_polls_on_author_id" ON "polls" USING btree ("author_id")[0m
  [1m[35m (5.9ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "question_text" text NOT NULL, "poll_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.6ms)[0m  [1mCREATE  INDEX  "index_questions_on_poll_id" ON "questions" USING btree ("poll_id")[0m
  [1m[35m (3.3ms)[0m  CREATE TABLE "responses" ("id" serial primary key, "user_id" integer NOT NULL, "answer_choice_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.5ms)[0m  [1mCREATE  INDEX  "index_responses_on_answer_choice_id" ON "responses" USING btree ("answer_choice_id")[0m
  [1m[35m (1.5ms)[0m  CREATE UNIQUE INDEX  "index_responses_on_user_id_and_answer_choice_id" ON "responses" USING btree ("user_id", "answer_choice_id")
  [1m[36m (1.6ms)[0m  [1mCREATE  INDEX  "index_responses_on_user_id" ON "responses" USING btree ("user_id")[0m
  [1m[35m (3.2ms)[0m  CREATE TABLE "users" ("id" serial primary key, "user_name" character varying(255) NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (1.8ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.5ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20141023171635')
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"[0m  [["created_at", "2014-10-23 22:16:35.437759"], ["updated_at", "2014-10-23 22:16:35.437759"], ["user_name", "Llorenc"]]
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"  [["created_at", "2014-10-23 22:16:35.446358"], ["updated_at", "2014-10-23 22:16:35.446358"], ["user_name", "Coulter"]]
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "polls" ("author_id", "created_at", "title", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["author_id", 1], ["created_at", "2014-10-23 22:16:35.495639"], ["title", "Barcelona vs. Real Madrid"], ["updated_at", "2014-10-23 22:16:35.495639"]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "polls" ("author_id", "created_at", "title", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["author_id", 2], ["created_at", "2014-10-23 22:16:35.499723"], ["title", "App Academy vs. Dev Bootcamp"], ["updated_at", "2014-10-23 22:16:35.499723"]]
  [1m[36mPoll Load (0.7ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 22:16:35.515148"], ["poll_id", 1], ["question_text", "Who will win?"], ["updated_at", "2014-10-23 22:16:35.515148"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 22:16:35.519679"], ["poll_id", 1], ["question_text", "Who will score first?"], ["updated_at", "2014-10-23 22:16:35.519679"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 22:16:35.522483"], ["poll_id", 2], ["question_text", "Who will win?"], ["updated_at", "2014-10-23 22:16:35.522483"]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "question_text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-10-23 22:16:35.525199"], ["poll_id", 2], ["question_text", "Who will make more money?"], ["updated_at", "2014-10-23 22:16:35.525199"]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Barcelona"], ["created_at", "2014-10-23 22:16:35.539163"], ["question_id", 1], ["updated_at", "2014-10-23 22:16:35.539163"]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Real Madrid"], ["created_at", "2014-10-23 22:16:35.543808"], ["question_id", 1], ["updated_at", "2014-10-23 22:16:35.543808"]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Messi"], ["created_at", "2014-10-23 22:16:35.546400"], ["question_id", 2], ["updated_at", "2014-10-23 22:16:35.546400"]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Ronaldo"], ["created_at", "2014-10-23 22:16:35.549434"], ["question_id", 2], ["updated_at", "2014-10-23 22:16:35.549434"]]
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "App Academy"], ["created_at", "2014-10-23 22:16:35.551858"], ["question_id", 3], ["updated_at", "2014-10-23 22:16:35.551858"]]
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Dev Bootcamp"], ["created_at", "2014-10-23 22:16:35.554217"], ["question_id", 3], ["updated_at", "2014-10-23 22:16:35.554217"]]
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Llorenc"], ["created_at", "2014-10-23 22:16:35.556247"], ["question_id", 4], ["updated_at", "2014-10-23 22:16:35.556247"]]
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "answer_choices" ("answer_text", "created_at", "question_id", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_text", "Coulter"], ["created_at", "2014-10-23 22:16:35.558163"], ["question_id", 4], ["updated_at", "2014-10-23 22:16:35.558163"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (1.2ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mQuestion Load (1.3ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mResponse Exists (1.7ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 2 LIMIT 1[0m  [["question_id", 1]]
  [1m[35mPoll Load (0.6ms)[0m  SELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 1], ["created_at", "2014-10-23 22:17:20.741595"], ["updated_at", "2014-10-23 22:17:20.741595"], ["user_id", 2]]
  [1m[36m (276.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.5ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mResponse Exists (0.8ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 2 LIMIT 1  [["question_id", 2]]
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_choice_id", 4], ["created_at", "2014-10-23 22:17:33.519033"], ["updated_at", "2014-10-23 22:17:33.519033"], ["user_id", 2]]
  [1m[35m (2.1ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 7]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (0.5ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 7]]
  [1m[36mResponse Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1[0m  [["question_id", 4]]
  [1m[35mPoll Load (0.4ms)[0m  SELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 7], ["created_at", "2014-10-23 22:17:54.212403"], ["updated_at", "2014-10-23 22:17:54.212403"], ["user_id", 1]]
  [1m[36m (262.2ms)[0m  [1mCOMMIT[0m
  [1m[35mUser Load (0.9ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mPoll Load (2.2ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 2
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (2.5ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = user_responses.num_responses
      
PG::GroupingError: ERROR:  column "user_responses.num_responses" must appear in the GROUP BY clause or be used in an aggregate function
LINE 26:         COUNT(*) = user_responses.num_responses
                            ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = user_responses.num_responses
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (2.9ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) > SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 0 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mPoll Load (1.4ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 0 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 2
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mPoll Load (1.4ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 0 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 2
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.4ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 0 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 0 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 2
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (2.0ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 0 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 0 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 2
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 2 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 2
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 2 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      
  [1m[36mResponse Load (0.5ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.9ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 10 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 1
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      [0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.3ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions
      ON polls.id = questions.poll_id
      JOIN
        (SELECT
          ac.question_id AS question_id,
          SUM(CASE WHEN r.id IS NULL THEN 10 ELSE 1 END) AS num_responses
        FROM
          responses as r
        LEFT OUTER JOIN
          answer_choices as ac ON ac.id = r.answer_choice_id
        WHERE
          r.user_id = 2
        GROUP BY
          ac.question_id
        ) AS user_responses
         ON questions.id = user_responses.question_id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(user_responses.num_responses)
      [0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.5ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        answer_choices ON questions.id = answer_choices.question_id
      LEFT OUTER JOIN
        (SELECT
          responses.*
        FROM
          responses
        WHERE
          user_id = 2
        ) ON responses.answer_choice_id = answer_choice.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
      [0m
PG::SyntaxError: ERROR:  subquery in FROM must have an alias
LINE 11:         (SELECT
                 ^
HINT:  For example, FROM (SELECT ...) [AS] foo.
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        answer_choices ON questions.id = answer_choices.question_id
      LEFT OUTER JOIN
        (SELECT
          responses.*
        FROM
          responses
        WHERE
          user_id = 2
        ) ON responses.answer_choice_id = answer_choice.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
      
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.5ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        answer_choices ON questions.id = answer_choices.question_id
      LEFT OUTER JOIN
        (SELECT
          *
        FROM
          responses
        WHERE
          user_id = 2
        ) ON responses.answer_choice_id = answer_choice.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
      [0m
PG::SyntaxError: ERROR:  subquery in FROM must have an alias
LINE 11:         (SELECT
                 ^
HINT:  For example, FROM (SELECT ...) [AS] foo.
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        answer_choices ON questions.id = answer_choices.question_id
      LEFT OUTER JOIN
        (SELECT
          *
        FROM
          responses
        WHERE
          user_id = 2
        ) ON responses.answer_choice_id = answer_choice.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
      
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.6ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        answer_choices ON questions.id = answer_choices.question_id
      LEFT OUTER JOIN
        (SELECT
          *
        FROM
          responses
        WHERE
          user_id = 2
        ) AS r ON r.answer_choice_id = answer_choice.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END)
      [0m
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "answer_choice"
LINE 17:         ) AS r ON r.answer_choice_id = answer_choice.id
                                                ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        answer_choices ON questions.id = answer_choices.question_id
      LEFT OUTER JOIN
        (SELECT
          *
        FROM
          responses
        WHERE
          user_id = 2
        ) AS r ON r.answer_choice_id = answer_choice.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END)
      
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.7ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              r.user_id = 2
            ) AS user_responses ON user_responses.answer_choices_id = ac.id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      [0m
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "r"
LINE 21:               r.user_id = 2
                       ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              r.user_id = 2
            ) AS user_responses ON user_responses.answer_choices_id = ac.id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.9ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 2
            ) AS user_responses ON user_responses.answer_choices_id = ac.id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      [0m
PG::UndefinedColumn: ERROR:  column user_responses.answer_choices_id does not exist
LINE 22:             ) AS user_responses ON user_responses.answer_cho...
                                            ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 2
            ) AS user_responses ON user_responses.answer_choices_id = ac.id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.6ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 2
            ) AS ur ON ur.answer_choice_id = ac.id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      [0m
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "r"
LINE 11: ...     ac.question_id AS question_id, SUM(CASE WHEN r.id IS NU...
                                                              ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN r.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 2
            ) AS ur ON ur.answer_choice_id = ac.id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (2.1ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN ur.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 2
            ) AS ur ON ur.answer_choice_id = ac.id
          GROUP BY
            ac.question_id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.4ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN ur.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 1
            ) AS ur ON ur.answer_choice_id = ac.id
          GROUP BY
            ac.question_id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (2.1ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN ur.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        LEFT OUTER JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 1
            ) AS ur ON ur.answer_choice_id = ac.id
          GROUP BY
            ac.question_id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.4ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      JOIN
        (
        SELECT
          ac.question_id AS question_id, SUM(CASE WHEN ur.id IS NULL THEN 0 ELSE 1 END) AS num_responses
        FROM
          answer_choices AS ac
        LEFT OUTER JOIN
          (
            SELECT
              *
            FROM
              responses
            WHERE
              user_id = 2
            ) AS ur ON ur.answer_choice_id = ac.id
          GROUP BY
            ac.question_id
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.num_responses IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.0ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
        SELECT
          answer_choices.question_id as question_id,
          response.id as response_id
        FROM
          answer_choices
        JOIN
          responses ON answer_choices.id = responses.answer_choice_id
        WHERE
          user_id = 2
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      [0m
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "response"
LINE 12:           response.id as response_id
                   ^
: 
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
        SELECT
          answer_choices.question_id as question_id,
          response.id as response_id
        FROM
          answer_choices
        JOIN
          responses ON answer_choices.id = responses.answer_choice_id
        WHERE
          user_id = 2
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.2ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
        SELECT
          answer_choices.question_id as question_id,
          responses.id as response_id
        FROM
          answer_choices
        JOIN
          responses ON answer_choices.id = responses.answer_choice_id
        WHERE
          user_id = 2
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.3ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
        SELECT
          answer_choices.question_id as question_id,
          responses.id as response_id
        FROM
          answer_choices
        JOIN
          responses ON answer_choices.id = responses.answer_choice_id
        WHERE
          user_id = 1
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.3ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
        SELECT
          answer_choices.question_id as question_id,
          responses.id as response_id
        FROM
          answer_choices
        JOIN
          responses ON answer_choices.id = responses.answer_choice_id
        WHERE
          user_id = 1
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.3ms)[0m  [1m
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
        SELECT
          answer_choices.question_id as question_id,
          responses.id as response_id
        FROM
          answer_choices
        JOIN
          responses ON answer_choices.id = responses.answer_choice_id
        WHERE
          user_id = 2
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      [0m
  [1m[35mResponse Load (0.7ms)[0m  SELECT "responses".* FROM "responses"
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (2.0ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
          SELECT
            answer_choices.question_id as question_id,
            responses.id as response_id
          FROM
            answer_choices
          JOIN
            responses ON answer_choices.id = responses.answer_choice_id
          WHERE
            user_id = 1
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mPoll Load (1.3ms)[0m  
      SELECT
        polls.*
      FROM
        polls
      JOIN
        questions ON polls.id = questions.poll_id
      LEFT OUTER JOIN
        (
          SELECT
            answer_choices.question_id as question_id,
            responses.id as response_id
          FROM
            answer_choices
          JOIN
            responses ON answer_choices.id = responses.answer_choice_id
          WHERE
            user_id = 2
        ) AS ans_questions ON ans_questions.question_id = questions.id
      GROUP BY
        polls.id
      HAVING
        COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)
      
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT * FROM "polls"[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.6ms)[0m  [1mSELECT polls.id FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id"[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.7ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)[0m
PG::DuplicateAlias: ERROR:  table name "questions" specified more than once
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.5ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)[0m
PG::DuplicateAlias: ERROR:  table name "questions" specified more than once
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.5ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 1) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)[0m
PG::DuplicateAlias: ERROR:  table name "questions" specified more than once
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 1) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.7ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)[0m
PG::DuplicateAlias: ERROR:  table name "questions" specified more than once
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.7ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2)[0m
PG::DuplicateAlias: ERROR:  table name "questions" specified more than once
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id WHERE (responses.user_id = 2)
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id[0m
PG::DuplicateAlias: ERROR:  table name "questions" specified more than once
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN questions ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.5ms)[0m  [1mSELECT polls.* FROM "polls"[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.9ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (0.6ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id[0m
PG::UndefinedColumn: ERROR:  column responses.answer_choices_id does not exist
LINE 1: ...ices.question_id = questions.id JOIN responses ON responses....
                                                             ^
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choices_id = answer_choices.id
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.5ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.0ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.user_id = 2)[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.1ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.2ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.user_id = 2) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.3ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.user_id = 1) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.9ms)[0m  [1mSELECT COUNT(*) FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.user_id = 1) GROUP BY polls.id[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.2ms)[0m  [1mSELECT polls.*, COUNT(*) AS num_questions FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.user_id = 1) GROUP BY polls.id[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.7ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.user_id = 1) GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN responses.id IS NULL THEN 0 ELSE 1 END)[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.9ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (user_id = 1)[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mAnswerChoice Load (0.7ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (user_id = 2)[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.6ms)[0m  SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id GROUP BY polls.id
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.9ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN
              (
                SELECT
                  answer_choices.question_id as question_id,
                  responses.id as response_id
                FROM
                  answer_choices
                JOIN
                  responses ON answer_choices.id = responses.answer_choice_id
                WHERE
                  user_id = 1
                ) AS ans_questions ON ans_questions.question_id = questions.id GROUP BY polls.id[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.8ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN
              (
                SELECT
                  answer_choices.question_id as question_id,
                  responses.id as response_id
                FROM
                  answer_choices
                JOIN
                  responses ON answer_choices.id = responses.answer_choice_id
                WHERE
                  user_id = 1
                ) AS ans_questions ON ans_questions.question_id = questions.id GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.3ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN
              (
                SELECT
                  answer_choices.question_id as question_id,
                  responses.id as response_id
                FROM
                  answer_choices
                JOIN
                  responses ON answer_choices.id = responses.answer_choice_id
                WHERE
                  user_id = 2
                ) AS ans_questions ON ans_questions.question_id = questions.id GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (1.8ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN
              (
                SELECT
                  answer_choices.question_id as question_id,
                  responses.id as response_id
                FROM
                  answer_choices
                JOIN
                  responses ON answer_choices.id = responses.answer_choice_id
                WHERE
                  user_id = 1
                ) AS ans_questions ON ans_questions.question_id = questions.id GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1
  [1m[36mPoll Load (1.3ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN
              (
                SELECT
                  answer_choices.question_id as question_id,
                  responses.id as response_id
                FROM
                  answer_choices
                JOIN
                  responses ON answer_choices.id = responses.answer_choice_id
                WHERE
                  user_id = 2
                ) AS ans_questions ON ans_questions.question_id = questions.id GROUP BY polls.id HAVING COUNT(*) = SUM(CASE WHEN ans_questions.response_id IS NULL THEN 0 ELSE 1 END)[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mResponse Exists (0.6ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1  [["question_id", 3]]
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mResponse Exists (0.8ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1  [["question_id", 3]]
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.5ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mResponse Exists (1.0ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1  [["question_id", 3]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35mPoll Load (0.5ms)[0m  SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = question.id JOIN responses ON responses.answer_choice_id = answer_choice.id WHERE (responses.id = NULL)
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "question"
LINE 1: ...IN answer_choices ON answer_choices.question_id = question.i...
                                                             ^
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = question.id JOIN responses ON responses.answer_choice_id = answer_choice.id WHERE (responses.id = NULL)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 5]]
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 5]]
  [1m[36mResponse Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1[0m  [["question_id", 3]]
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36mPoll Load (0.5ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choice.id WHERE (responses.id = NULL)[0m
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "answer_choice"
LINE 1: ...id JOIN responses ON responses.answer_choice_id = answer_cho...
                                                             ^
: SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choice.id WHERE (responses.id = NULL)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mUser Load (0.5ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mResponse Exists (0.6ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1  [["question_id", 3]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35mPoll Load (1.0ms)[0m  SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.id = NULL)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 5]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 5]]
  [1m[36mResponse Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 1 LIMIT 1[0m  [["question_id", 3]]
  [1m[35mPoll Load (0.9ms)[0m  SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id JOIN responses ON responses.answer_choice_id = answer_choices.id WHERE (responses.id = NULL)
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_choice_id", 5], ["created_at", "2014-10-24 00:53:52.148186"], ["updated_at", "2014-10-24 00:53:52.148186"], ["user_id", 1]]
  [1m[35m (2.1ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"  [["created_at", "2014-10-24 00:59:14.599228"], ["updated_at", "2014-10-24 00:59:14.599228"], ["user_name", "Messi"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.7ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mResponse Exists (0.9ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 3 LIMIT 1  [["question_id", 3]]
  [1m[36mPoll Load (0.9ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id WHERE (answer_choices.id = 5)[0m
  [1m[35mPoll Load (0.5ms)[0m  SELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 5], ["created_at", "2014-10-24 00:59:26.450148"], ["updated_at", "2014-10-24 00:59:26.450148"], ["user_id", 3]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.5ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mResponse Exists (0.9ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 3 LIMIT 1  [["question_id", 1]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35mPoll Load (0.8ms)[0m  SELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id WHERE (answer_choices.id = 1)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mResponse Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 3 LIMIT 1[0m  [["question_id", 1]]
  [1m[35mPoll Load (1.5ms)[0m  SELECT  polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id WHERE (answer_choices.id = 1)  ORDER BY "polls"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.5ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_choice_id", 1], ["created_at", "2014-10-24 01:03:56.241225"], ["updated_at", "2014-10-24 01:03:56.241225"], ["user_id", 3]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES ($1, $2, $3) RETURNING "id"  [["created_at", "2014-10-24 01:04:33.536053"], ["updated_at", "2014-10-24 01:04:33.536053"], ["user_name", "Fante"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mResponse Exists (0.6ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 4 LIMIT 1  [["question_id", 1]]
  [1m[36mPoll Load (0.8ms)[0m  [1mSELECT  polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id WHERE (answer_choices.id = 1)  ORDER BY "polls"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m  SELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 1], ["created_at", "2014-10-24 01:04:39.217428"], ["updated_at", "2014-10-24 01:04:39.217428"], ["user_id", 4]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mResponse Exists (0.7ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 4 LIMIT 1  [["question_id", 4]]
  [1m[36mPoll Load (1.1ms)[0m  [1mSELECT  polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id WHERE (answer_choices.id = 7)  ORDER BY "polls"."id" ASC LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 7], ["created_at", "2014-10-24 01:05:01.063146"], ["updated_at", "2014-10-24 01:05:01.063146"], ["user_id", 4]]
  [1m[36mPoll Load (0.6ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35m (2.2ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mAnswerChoice Load (0.5ms)[0m  SELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 7]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1  [["id", 7]]
  [1m[36mResponse Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 2 LIMIT 1[0m  [["question_id", 4]]
  [1m[35mPoll Load (0.8ms)[0m  SELECT  polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id WHERE (answer_choices.id = 7)  ORDER BY "polls"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 3 LIMIT 1
  [1m[36mPoll Load (1.7ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN
              (
                SELECT
                  answer_choices.question_id as question_id,
                  responses.id as response_id
                FROM
                  answer_choices
                JOIN
                  responses ON answer_choices.id = responses.answer_choice_id
                WHERE
                  user_id = 3
                ) AS ans_questions ON ans_questions.question_id = questions.id GROUP BY polls.id HAVING COUNT(*) = COUNT(ans_questions.response_id)[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT  "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mUser Load (0.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = $1 LIMIT 1  [["id", 3]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "answer_choices" ON "questions"."id" = "answer_choices"."question_id" WHERE "answer_choices"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mResponse Exists (0.7ms)[0m  SELECT  1 AS one FROM "responses" INNER JOIN "answer_choices" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = $1 AND (responses.id IS NOT NULL) AND "responses"."user_id" = 3 LIMIT 1  [["question_id", 2]]
  [1m[36mPoll Load (0.9ms)[0m  [1mSELECT  polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id JOIN answer_choices ON answer_choices.question_id = questions.id WHERE (answer_choices.id = 3)  ORDER BY "polls"."id" ASC LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4) RETURNING "id"  [["answer_choice_id", 3], ["created_at", "2014-10-24 01:11:33.926954"], ["updated_at", "2014-10-24 01:11:33.926954"], ["user_id", 3]]
  [1m[36mPoll Load (0.7ms)[0m  [1mSELECT  "polls".* FROM "polls"  WHERE "polls"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35m (1.9ms)[0m  COMMIT
  [1m[36mPoll Load (1.4ms)[0m  [1mSELECT polls.* FROM "polls" JOIN questions ON questions.poll_id = polls.id LEFT OUTER JOIN
              (
                SELECT
                  answer_choices.question_id as question_id,
                  responses.id as response_id
                FROM
                  answer_choices
                JOIN
                  responses ON answer_choices.id = responses.answer_choice_id
                WHERE
                  user_id = 3
                ) AS ans_questions ON ans_questions.question_id = questions.id GROUP BY polls.id HAVING COUNT(*) = COUNT(ans_questions.response_id)[0m
